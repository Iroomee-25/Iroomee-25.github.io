---
alwaysApply: true
description: "Tavily MCP를 필수로 사용하여 최신 정보를 검색하고 pages 폴더 형식에 맞는 블로그 글을 작성합니다"
---
# 블로그 자동 생성 규칙 (Tavily MCP 필수) 🚀

이 규칙은 사용자가 주제를 입력하면 **Tavily MCP**를 통해 최신 정보를 검색한 후 자동으로 블로그 글을 생성하는 워크플로우입니다.

## 🔍 핵심 원칙

**블로그 작성 시 반드시 `mcp_tavily_tavily-search` 도구를 사용하여 웹 검색을 실행해야 합니다!**

## 📋 블로그 작성 프로세스

### 1단계: Tavily MCP를 통한 웹 검색 (필수) 🔍

**⚠️ 중요: 블로그 작성 시 반드시 `mcp_tavily_tavily-search` 도구를 사용해야 합니다!**

사용자가 주제를 입력하면 **무조건** 다음을 수행합니다:

1. **Tavily MCP 웹 검색 실행**
   - 도구 이름: `mcp_tavily_tavily-search`
   - 최소 2-3개의 다양한 키워드로 검색
   - 검색 깊이: `search_depth: "advanced"` 권장
   - 최대 결과: `max_results: 10` 이상

2. **검색 예시**
   ```javascript
   // 예: AI 트렌드 블로그를 작성할 때
   await mcp_tavily_tavily_search({
     query: "AI trends 2025",
     search_depth: "advanced",
     max_results: 10
   });
   
   await mcp_tavily_tavily_search({
     query: "인공지능 최신 동향",
     search_depth: "advanced",
     max_results: 10
   });
   ```

3. **검색 결과 활용**
   - 수집된 최신 정보를 바탕으로 정확한 내용 작성
   - 출처가 명확한 정보 우선 사용
   - 여러 검색 결과를 종합하여 객관적인 내용 구성

**❌ 금지 사항:**
- Tavily 검색 없이 블로그를 작성하는 것은 절대 금지
- 기억이나 추측으로만 내용을 작성하는 것 금지
- 검색 결과가 부족하면 추가 키워드로 재검색 필요

### 2단계: 블로그 구조 작성 ✍️

블로그는 [pages/](mdc:pages/) 폴더의 기존 파일 형식을 따라야 합니다.

#### Front Matter (필수)
```yaml
---
title: '매력적인 제목 (명확하고 구체적으로)'
date: YYYY-MM-DD (오늘 날짜)
tags: ['태그1', '태그2', '태그3', '태그4']
category: '적절한 카테고리 (예: Technology, History, Science, Culture 등)'
description: '100자 이내의 매력적인 요약 설명'
---
```

#### 본문 구조
1. **메인 제목** (# 제목 + 관련 이모지 🎯)
   - 주제를 명확하게 소개하는 도입부

2. **소제목들** (##, ### 활용)
   - 논리적인 흐름으로 구성
   - 각 섹션에 적절한 이모지 추가

3. **다양한 마크다운 요소 활용**
   - ✅ 리스트 (순서 있음/없음)
   - ✅ 인용문 (> 사용)
   - ✅ 코드 블록 (필요시, 언어 명시)
   - ✅ 표 (비교/정리 시)
   - ✅ 강조 (**굵게**, *기울임*)
   - ✅ 링크 (참고 자료)

4. **마무리 섹션**
   - 핵심 내용 요약
   - 참고 키워드
   - 작성일 표시

### 3단계: 품질 기준 ⭐

블로그는 다음 기준을 충족해야 합니다:

- **정보의 정확성**: 웹 검색 결과를 바탕으로 한 최신 정보
- **가독성**: 명확한 구조, 적절한 문단 나누기
- **풍부함**: 최소 100줄 이상의 충실한 내용
- **시각적 요소**: 이모지, 표, 코드 블록 등 다양하게 활용
- **한국어**: 모든 내용은 자연스러운 한국어로 작성

### 4단계: 파일 생성 📁

- 파일명: `주제를-kebab-case로.md`
- 저장 위치: [pages/](mdc:pages/) 폴더
- 예: `artificial-intelligence-trends.md`

### 5단계: 로깅 📊

블로그 생성 과정에서 다음 정보를 로그로 남깁니다:
```javascript
console.log('=== 블로그 생성 시작 ===');
console.log('주제:', topic);
console.log('웹 검색 키워드:', keywords);
console.log('검색 결과 수:', searchResults.length);
console.log('파일 생성 위치:', filePath);
console.log('=== 블로그 생성 완료 ===');
```

## 🎯 사용 예시

**사용자 입력:**
"양자 컴퓨터의 최신 동향에 대한 블로그 작성해줘"

**AI 수행 단계:**
1. **Tavily MCP 웹 검색 실행 (필수)**
   ```javascript
   mcp_tavily_tavily-search({
     query: "quantum computer 2025 trends",
     search_depth: "advanced",
     max_results: 10
   });
   
   mcp_tavily_tavily-search({
     query: "양자컴퓨터 최신 기술",
     search_depth: "advanced",
     max_results: 10
   });
   
   mcp_tavily_tavily-search({
     query: "quantum computing breakthroughs",
     search_depth: "advanced",
     max_results: 10
   });
   ```
2. 검색 결과 분석 및 정보 구조화
3. 블로그 작성 (제목, 메타데이터, 본문)
4. `pages/quantum-computer-trends.md` 파일 생성
5. `node .github/scripts/generate-posts.js` 실행하여 posts.json 업데이트
6. 완료 알림 + 로그 출력

## 필수 사항
블로그 글을 작성하고 나서 'node .github/scripts/generate-posts.js' 스크립트를 실행하여 posts.json 파일을 생성하세요.

## ⚠️ 주의사항 (반드시 준수)

### 필수 사항 ✅

1. **Tavily MCP 사용 필수**
   - 블로그 작성 전 반드시 `mcp_tavily_tavily-search` 도구로 웹 검색
   - 최소 2-3개의 키워드로 다각도 검색
   - `search_depth: "advanced"` 옵션 사용 권장

2. **최신 정보 반영**
   - 항상 검색 결과를 바탕으로 작성
   - 기억이나 추측으로 내용을 채우지 않기
   - 정보 출처가 불명확하면 추가 검색

3. **형식 준수**
   - [example.md](mdc:pages/example.md)와 [gyeongju-apec-summit.md](mdc:pages/gyeongju-apec-summit.md)의 형식 참고
   - Front Matter 필수 항목 모두 포함
   - 최소 100줄 이상의 충실한 내용

4. **Post 업데이트**
   - 블로그 파일 생성 후 반드시 `node .github/scripts/generate-posts.js` 실행

### 금지 사항 ❌

- ❌ Tavily 검색 없이 블로그 작성
- ❌ 검색하지 않고 기존 지식만으로 작성
- ❌ 형식을 무시하고 자유롭게 작성
- ❌ 짧거나 내용이 빈약한 블로그
2025